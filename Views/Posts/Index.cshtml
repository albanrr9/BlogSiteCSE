@model IEnumerable<BlogSite.Models.Post>

@{
    ViewData["Title"] = "Posts";
    var currentPage = (int)ViewData["CurrentPage"];
    var totalPages = (int)ViewData["TotalPages"];
    var pageSize = (int)ViewData["PageSize"];
    var searchQuery = ViewData["CurrentFilter"] as string;
}

<h1>Posts</h1>

<!-- Search Form -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchQuery" class="form-control" placeholder="Search posts..." value="@searchQuery" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<!-- Add New Post Link (Admin Only) -->
@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create" class="btn btn-success">Create New</a>
    </p>
}

<!-- Posts Table -->
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Content</th>
            <th>Image</th>
            <th>Created At</th>
            <th>Author</th>
            <th>Category</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Any())
        {
            @foreach (var post in Model)
            {
                <tr>
                    <td>@post.Title</td>
                    <td>@post.Content</td>
                    <td>
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img src="@post.ImageUrl" alt="Post Image" style="max-width: 100px; height: auto;" />
                        }
                        else
                        {
                            <span>No Image</span>
                        }
                    </td>
                    <td>@post.CreatedAt.ToString("MMMM dd, yyyy")</td>
                    <td>@post.Author?.FirstName @post.Author?.LastName</td>
                    <td>@post.Category?.Name</td>
                    <td>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-warning">Edit</a>
                            <a asp-action="Delete" asp-route-id="@post.Id" class="btn btn-sm btn-danger">Delete</a>
                        }
                        <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-info">Details</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center">No posts found.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <!-- Previous Page -->
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-searchQuery="@searchQuery" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@pageSize">Previous</a>
            </li>

            <!-- Page Numbers -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-searchQuery="@searchQuery" asp-route-page="@i" asp-route-pageSize="@pageSize">@i</a>
                </li>
            }

            <!-- Next Page -->
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-searchQuery="@searchQuery" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@pageSize">Next</a>
            </li>
        </ul>
    </nav>
</div>